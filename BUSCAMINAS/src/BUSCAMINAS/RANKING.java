/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package BUSCAMINAS;

import static java.rmi.Naming.list;
import java.util.ArrayList;
import java.util.Collections;
import static java.util.Collections.list;
import java.util.Comparator;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import static BUSCAMINAS.Almacen_J.copy;

/**
 *
 * @author d.pelado.2022
 */
public class RANKING extends javax.swing.JFrame {

    
    ArrayList<Jugador> copy = (ArrayList<Jugador>) MAIN.listaJ.clone();
    int aux;

    public void setAux(int aux) {
        this.aux = aux;
    }
    
    private void llenarTabla()
    {
        DefaultTableModel modeloDefault = new DefaultTableModel(new String[]{"Nombre","Partidas Jugadas","Partidas Ganadas","Partidas Perdidas","Minas Encontradas","Minas Perdidas"},MAIN.listaJ.size())
            {
                @Override
                public boolean isCellEditable(int row, int column)
                {
                    return false;
                }
            };
        jTable1.setModel(modeloDefault);
        
        TableModel modeloDatos = jTable1.getModel();
        
        for(int i = 0; i < MAIN.listaJ.size(); i++)
        {
            Jugador jgdr = MAIN.listaJ.get(i);
            modeloDatos.setValueAt(jgdr.getNombre(), i, 0);
            modeloDatos.setValueAt(jgdr.getStats().getJugadas(), i, 1);
            modeloDatos.setValueAt(jgdr.getStats().getGanadas(), i, 2);
            modeloDatos.setValueAt(jgdr.getStats().getPerdidas(), i, 3);
            modeloDatos.setValueAt(jgdr.getStats().getMinas_a_favor(), i, 4);
            modeloDatos.setValueAt(jgdr.getStats().getMinas_en_contra(), i, 5);
            
        }
        
    }
    
        private void llenarTabla(ArrayList<Jugador> aux)
    {
        DefaultTableModel modeloDefault = new DefaultTableModel(new String[]{"Nombre","Partidas Jugadas","Partidas Ganadas","Partidas Perdidas","Minas Encontradas","Minas Perdidas"},aux.size())
            {
                @Override
                public boolean isCellEditable(int row, int column)
                {
                    return false;
                }
            };
        jTable1.setModel(modeloDefault);
        
        TableModel modeloDatos = jTable1.getModel();
        
        for(int i = 0; i < aux.size(); i++)
        {
            Jugador jgdr = aux.get(i);
            modeloDatos.setValueAt(jgdr.getNombre(), i, 0);
            modeloDatos.setValueAt(jgdr.getStats().getJugadas(), i, 1);
            modeloDatos.setValueAt(jgdr.getStats().getGanadas(), i, 2);
            modeloDatos.setValueAt(jgdr.getStats().getPerdidas(), i, 3);
            modeloDatos.setValueAt(jgdr.getStats().getMinas_a_favor(), i, 4);
            modeloDatos.setValueAt(jgdr.getStats().getMinas_en_contra(), i, 5);
            
        }
        
    }
        
    public ArrayList<Jugador> clasificacion_por_victorias()
    {
     
        Collections.sort(this.copy, new Comparator<Jugador>()
        {
            @Override
            public int compare(Jugador j1, Jugador j2)
            {
                return Integer.valueOf(j2.getStats().getGanadas()).compareTo(j1.getStats().getGanadas());
            }
        });
        return this.copy;
    }    
     public ArrayList<Jugador> clasificacion_por_nombre()
    {
       
    Collections.sort(this.copy, new Comparator<Jugador>(){
        @Override
        public int compare(Jugador j1, Jugador j2)
        {
            return j1.getNombre().compareTo(j2.getNombre());
        }
    });
    
    
    return this.copy;
    }
    
    public RANKING() {
        initComponents();
        llenarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        jLabel1.setText("RANKING");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Partidas Ganadas", "Partidas Perdidas", "Minas Encontradas", "Minas Perdidas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

        });
        jScrollPane1.setViewportView(jTable1);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ELIGE", "Victorias", "Nombre" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(170, 170, 170)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        String option = jComboBox1.getSelectedItem().toString();
        if (option.equals("Victorias"))
        {
            llenarTabla(clasificacion_por_victorias());
        }
        if (option.endsWith("Nombre"))
        {
            llenarTabla(clasificacion_por_nombre());
        }



    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    PLAYER mJUGADOR = new PLAYER(aux);
    mJUGADOR.setVisible(true);
     this.setVisible(false);  
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RANKING.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RANKING.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RANKING.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RANKING.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RANKING().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
